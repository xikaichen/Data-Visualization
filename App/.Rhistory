runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?mainPanel
runApp()
runApp()
runApp()
?sidebarLayout
?plotOutput
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
?animationOptions
runApp()
runApp()
?sliderInput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
reg %>% coeftest %>% as.table %>% kable
install.packages("lmtest")
install.packages("knitr")
install.packages("biglm")
getwd()
load('reg.RData')
reg
reg %>% coeftest %>% as.table %>% kable
library(tidyverse)
library(biglm)
library(lmtest)
library(knitr)
load('reg.RData')
reg %>% coeftest %>% as.table %>% kable
view(reg)
runApp()
reg %>% coeftest()
reg %>% coeftest %>% as.data.frame
reg %>% coeftest %>% as.table()as.data.frame
reg %>% coeftest %>% as.table %>% as.data.frame
runApp()
runApp()
runApp()
reg %>% coeftest %>% as.table %>% as.data.frame
a <- reg %>% coeftest %>% as.table %>% as.data.frame
View(a)
a %>% spread(Var2,Freq,-Var1)
a %>% spread(Var2,Freq)
runApp()
runApp()
?tableOutput
runApp()
runApp()
?sidebarPanel
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
load('data.RData')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?navbarPage
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages(c("assertthat", "orcutt", "party", "RcppArmadillo", "rgdal", "rgeos", "spdep", "stringi", "VIM", "zoo"))
load('motion.RData')
mapbox <- 'https://api.mapbox.com/styles/v1/mapbox/streets-v10/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiemhpcnVpIiwiYSI6ImNqMTZ6c3oxZzAzbmYyeW82bzZxb3ZsdXYifQ.PvdwBdaB6Lk7447AJwZs9w'
View(motion)
library(tidyverse)
glimpse(motion)
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp('~/Downloads/motion/要改.R')
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?animationOptions
runApp()
runApp()
bins1
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
？sliderInput
?sliderInput
runApp('~/Downloads/shinyJsTutorials-master/tutorials/materials2/C3_demo')
install.packages(C3)
install.packages("C3")
runApp()
runApp()
runApp()
?animationOptions
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
？column
？fluidRow
?fluidRow
?fluidRow
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
load('motion.RData')
load('motion.RData')
load('data.RData')
load('motion.RData')
lands <- new.env()
ids <- list(cathedral,GUM,metro,pond,theatre)
name <- c('St. Basil\'s Cathedral
','Glavny Universalny Magazin','Moscow Metro
','Patriarch\'s Pond','Bolshoi Theatre
')
for(i in 1:5){
lands[[name[i]]] <- motion %>%
filter(`User ID` %in% ids[[i]])
}
library(tidyverse)
library(leaflet)
library(htmltools)
library(shinydashboard)
library(shiny)
library(RColorBrewer)
library(ggvis)
library(googleVis)
library(plotly)
library(forcats)
library(biglm)
library(lmtest)
library(knitr)
library(DT)
for(i in 1:5){
lands[[name[i]]] <- motion %>%
filter(`User ID` %in% ids[[i]])
}
lands
lands$`St. Basil's Cathedral
`
lands$`St. Basil's Cathedral`$`User ID`
lands$`St. Basil's Cathedral`[['User ID']]
lands$`St. Basil's Cathedral`
lands$`Bolshoi Theatre
`$`User ID`
runApp()
runApp()
shiny::runApp()
runApp()
?addMarkers
shiny::runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
View(motion)
load('motion.RData')
shiny::runApp()
single <- list('St. Basil\'s Cathedral'=c(55.752500,37.623084),
'Glavny Universalny Magazin'=c(55.754691,37.621490),
'Moscow Metro'=c(55.756497,37.621610),
'Patriarch\'s Pond'=c(55.763920,37.592028),
'Bolshoi Theatre'=c(55.760209,37.618606))
single[['St. Basil\'s Cathedral']]
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?addLegend
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?renderImage
runApp()
runApp()
?plotOutput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
load('data.RData')
load('x_group_count.RData')
load('x.RData')
load('x.RData')
View(x)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
？plotlyOutput()
?plotlyOutput()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
